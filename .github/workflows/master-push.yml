name: Axiom
on: 
  push:
    branches:
      - master
jobs:
  push-to-registry:
    name: Push Docker Image
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.INTEGRATION_SLACK_WEBHOOK }}
    steps:
      - name: Setup golang
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - name: Checkout ident
        uses: actions/checkout@v2
        with:
          repository: provideplatform/ident
          path: 'ident'
          ref: master
          token: ${{ secrets.DEPLOY_GITHUB_PAT }}
      - name: Checkout axiom
        uses: actions/checkout@v2
        with:
          path: 'axiom'
      - run: docker-compose -f ./ops/docker-compose.yml build --no-cache axiom-api
        working-directory: axiom
      - run: docker-compose -f ./ops/docker-compose.yml up -d
        working-directory: axiom
      - run: TAGS=integration ./ops/run_local_tests_long.sh
        working-directory: axiom
      - run: docker-compose -f ./ops/docker-compose.yml logs
        working-directory: axiom
      - run: docker-compose -f ./ops/docker-compose.yml down
        working-directory: axiom
      - run: docker volume rm ops_prvd-db
        working-directory: axiom
      - name: Push Docker Image
        if: success()
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PAT }}
          repository: provide/axiom
          tags: "latest"
          path: 'axiom'
      - name: Send Slack Notification
        if: failure()  
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}

  deploy-api:
    name: Deploy to Production (API)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run ci-process.sh
        shell: bash
        env:
          AWS_ACCOUNT_ID: ${{ secrets.PRODUCTION_AWS_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.PRODUCTION_AWS_DEFAULT_REGION }}
          AWS_DEFAULT_OUTPUT: json
          ECR_REPOSITORY_NAME: provide/axiom
          ECS_TASK_DEFINITION_FAMILY: axiom
          ECS_CLUSTER: production
          ECS_SERVICE_NAME: axiom
          RUN_INTEGRATION_SUITE: false
        run: |
          chmod +x "${GITHUB_WORKSPACE}/ops/ci-process.sh"
          "${GITHUB_WORKSPACE}/ops/ci-process.sh"

  deploy-consumer:
    name: Deploy to Production (Consumer)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run ci-process.sh
        shell: bash
        env:
          AWS_ACCOUNT_ID: ${{ secrets.PRODUCTION_AWS_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.PRODUCTION_AWS_DEFAULT_REGION }}
          AWS_DEFAULT_OUTPUT: json
          ECR_REPOSITORY_NAME: provide/axiom
          ECS_TASK_DEFINITION_FAMILY: axiom-consumer
          ECS_CLUSTER: production
          ECS_SERVICE_NAME: axiom-consumer
          RUN_INTEGRATION_SUITE: false
        run: |
          chmod +x "${GITHUB_WORKSPACE}/ops/ci-process.sh"
          "${GITHUB_WORKSPACE}/ops/ci-process.sh"
